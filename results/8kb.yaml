keyspace: ks

keyspace_definition: |
  CREATE KEYSPACE ks WITH replication = {'class': 'NetworkTopologyStrategy', 'replication_factor': 1};

table: standard1

table_definition: |
  CREATE TABLE standard1 (
    key blob PRIMARY KEY,
    v blob,
  ) WITH compaction = {'class': 'LeveledCompactionStrategy'} AND compression = {} ;

columnspec:
  - name: key
    size: fixed(14) 
    population: seq(1..350M) # Sequentially populate 350M unique keys
  - name: v
    size: fixed(8000) # 8KB, self explanatory

insert:
  # we only update a single partition in any given insert
  partitions: fixed(1)
  # select: fixed(1)
  batchtype: UNLOGGED             # Single partition unlogged batches are essentially noops

queries:
   read:
      # Note we don't want BYPASS CACHE below as it seems to require Index reads to disk,
      # nullifying the effects of Index caching.
      cql: select key,v from standard1 where key = ? 
      fields: samerow

